import numpy as np
import pandas as pd
import implicit

# Load data (user-item interactions)
data = pd.read_csv('interactions.csv')
data = data.astype({"user_id": int, "item_id": int, "interaction": float})

# Create a sparse matrix of user-item interactions
sparse_matrix = sparse.csr_matrix((data['interaction'].astype(float), (data['user_id'], data['item_id'])))

# Train the model using the sparse matrix
model = implicit.als.AlternatingLeastSquares(factors=50, regularization=0.1, iterations=50)
model.fit(sparse_matrix)

# Get the recommended items for a given user
user_id = 1
user_items = data[data['user_id'] == user_id]['item_id']
recommendations = model.recommend(user_id, sparse_matrix, N=10, filter_already_liked_items=True, recalculate_user=True)

# Print the recommended items
for recommendation in recommendations:
    item_id, score = recommendation
    print("Item ID:", item_id, "Score:", score)
